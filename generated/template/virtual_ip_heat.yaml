heat_template_version: 2015-04-30

description: >
  HOT template to create a VirtualIp:

parameters:
  name:
    type: string
    description: name for the VirtualIp
    # required: optional
  fq_name:
    type: string
    description: fq_name for the VirtualIp
    # required: optional
  display_name:
    type: string
    description: Display name user configured string(name) that can be updated any time. Used as openstack name.
    # operations: CRUD
    # required: optional
  virtual_ip_properties_address:
    type: string
    description: address for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_status:
    type: string
    description: status for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_status_description:
    type: string
    description: status_description for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_admin_state:
    type: boolean
    description: admin_state for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_protocol:
    type: string
    description: protocol for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_protocol_port:
    type: number
    description: protocol_port for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_connection_limit:
    type: number
    description: connection_limit for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_subnet_id:
    type: string
    description: subnet_id for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_persistence_cookie_name:
    type: string
    description: persistence_cookie_name for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_ip_properties_persistence_type:
    type: string
    description: persistence_type for the VirtualIp
    # operations: CRUD
    # required: optional
  virtual_machine_interface_refs:
    type: string
    description: virtual_machine_interface_refs for the VirtualIp
    # required: optional
  loadbalancer_pool_refs:
    type: string
    description: loadbalancer_pool_refs for the VirtualIp
    # required: optional
  project:
    type: string
    description: project for the VirtualIp
    # required: optional

resources:
  template_VirtualIp:
    type: OS::ContrailV2::VirtualIp
    properties:
      name: { get_param: name }
      fq_name: { get_param: fq_name }
      display_name: { get_param: display_name }
      virtual_ip_properties:
        {
          virtual_ip_properties_address: { get_param: virtual_ip_properties_address },
          virtual_ip_properties_status: { get_param: virtual_ip_properties_status },
          virtual_ip_properties_status_description: { get_param: virtual_ip_properties_status_description },
          virtual_ip_properties_admin_state: { get_param: virtual_ip_properties_admin_state },
          virtual_ip_properties_protocol: { get_param: virtual_ip_properties_protocol },
          virtual_ip_properties_protocol_port: { get_param: virtual_ip_properties_protocol_port },
          virtual_ip_properties_connection_limit: { get_param: virtual_ip_properties_connection_limit },
          virtual_ip_properties_subnet_id: { get_param: virtual_ip_properties_subnet_id },
          virtual_ip_properties_persistence_cookie_name: { get_param: virtual_ip_properties_persistence_cookie_name },
          virtual_ip_properties_persistence_type: { get_param: virtual_ip_properties_persistence_type },
        }
      virtual_machine_interface_refs: [{ get_param: virtual_machine_interface_refs }]
      loadbalancer_pool_refs: [{ get_param: loadbalancer_pool_refs }]
      project: { get_param: project }

