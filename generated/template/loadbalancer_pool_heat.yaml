heat_template_version: 2015-04-30

description: >
  HOT template to create a LoadbalancerPool:

parameters:
  name:
    type: string
    description: name for the LoadbalancerPool
    # required: optional
  fq_name:
    type: string
    description: fq_name for the LoadbalancerPool
    # required: optional
  display_name:
    type: string
    description: Display name user configured string(name) that can be updated any time. Used as openstack name.
    # operations: CRUD
    # required: optional
  loadbalancer_pool_provider:
    type: string
    description: loadbalancer_pool_provider for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_properties_status:
    type: string
    description: status for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_properties_status_description:
    type: string
    description: status_description for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_properties_admin_state:
    type: boolean
    description: admin_state for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_properties_protocol:
    type: string
    description: protocol for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_properties_loadbalancer_method:
    type: string
    description: loadbalancer_method for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_properties_subnet_id:
    type: string
    description: subnet_id for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_properties_session_persistence:
    type: string
    description: session_persistence for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_properties_persistence_cookie_name:
    type: string
    description: persistence_cookie_name for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_custom_attributes_key_value_pair_key:
    type: string
    description: key for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_pool_custom_attributes_key_value_pair_value:
    type: string
    description: value for the LoadbalancerPool
    # operations: CRUD
    # required: optional
  loadbalancer_listener_refs:
    type: string
    description: loadbalancer_listener_refs for the LoadbalancerPool
    # required: optional
  loadbalancer_healthmonitor_refs:
    type: string
    description: loadbalancer_healthmonitor_refs for the LoadbalancerPool
    # required: optional
  service_instance_refs:
    type: string
    description: service_instance_refs for the LoadbalancerPool
    # required: optional
  virtual_machine_interface_refs:
    type: string
    description: virtual_machine_interface_refs for the LoadbalancerPool
    # required: optional
  service_appliance_set_refs:
    type: string
    description: service_appliance_set_refs for the LoadbalancerPool
    # required: optional
  project:
    type: string
    description: project for the LoadbalancerPool
    # required: optional

resources:
  template_LoadbalancerPool:
    type: OS::ContrailV2::LoadbalancerPool
    properties:
      name: { get_param: name }
      fq_name: { get_param: fq_name }
      display_name: { get_param: display_name }
      loadbalancer_pool_provider: { get_param: loadbalancer_pool_provider }
      loadbalancer_pool_properties:
        {
          loadbalancer_pool_properties_status: { get_param: loadbalancer_pool_properties_status },
          loadbalancer_pool_properties_status_description: { get_param: loadbalancer_pool_properties_status_description },
          loadbalancer_pool_properties_admin_state: { get_param: loadbalancer_pool_properties_admin_state },
          loadbalancer_pool_properties_protocol: { get_param: loadbalancer_pool_properties_protocol },
          loadbalancer_pool_properties_loadbalancer_method: { get_param: loadbalancer_pool_properties_loadbalancer_method },
          loadbalancer_pool_properties_subnet_id: { get_param: loadbalancer_pool_properties_subnet_id },
          loadbalancer_pool_properties_session_persistence: { get_param: loadbalancer_pool_properties_session_persistence },
          loadbalancer_pool_properties_persistence_cookie_name: { get_param: loadbalancer_pool_properties_persistence_cookie_name },
        }
      loadbalancer_pool_custom_attributes:
        {
          loadbalancer_pool_custom_attributes_key_value_pair:
            [{
              loadbalancer_pool_custom_attributes_key_value_pair_key: { get_param: loadbalancer_pool_custom_attributes_key_value_pair_key },
              loadbalancer_pool_custom_attributes_key_value_pair_value: { get_param: loadbalancer_pool_custom_attributes_key_value_pair_value },
            }],
        }
      loadbalancer_listener_refs: [{ get_param: loadbalancer_listener_refs }]
      loadbalancer_healthmonitor_refs: [{ get_param: loadbalancer_healthmonitor_refs }]
      service_instance_refs: [{ get_param: service_instance_refs }]
      virtual_machine_interface_refs: [{ get_param: virtual_machine_interface_refs }]
      service_appliance_set_refs: [{ get_param: service_appliance_set_refs }]
      project: { get_param: project }

